{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","reportWebVitals.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","firebaseInstance","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeletClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","Navigation","display","justifyContent","marginTop","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","refreshUse","currentUser","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b21b184d.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const authService=firebase.auth();\r\nexport const firebaseInstance= firebase;\r\nexport const dbService = firebase.firestore();\r\nexport const storageService= firebase.storage();","import React,{useState} from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst inputStyles={};\r\n\r\nconst AuthForm=()=>{\r\n    const [email, setEmail]=useState(\"\");\r\n    const [password, setPassword]=useState(\"\");\r\n    const [newAccount, setNewAccount]=useState(true);\r\n    const [error, setError]=useState(\"\")\r\n\r\n    const onChange=(event)=>{\r\n        const {\r\n            target: {name, value}\r\n        }=event;\r\n        if(name===\"email\"){\r\n            setEmail(value)\r\n        }\r\n        else if(name===\"password\"){\r\n            setPassword(value)\r\n        }\r\n    };\r\n\r\n    const onSubmit=async(event)=>{\r\n        event.preventDefault();\r\n        try{\r\n            let data;\r\n            if(newAccount){\r\n                data=await authService.createUserWithEmailAndPassword(email, password);//create account\r\n            }else{\r\n                data=await authService.signInWithEmailAndPassword(email, password);//log in\r\n            }\r\n            console.log(data);\r\n        } catch (error){\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount=()=>setNewAccount((prev)=>!prev);\r\n\r\n    return(\r\n        <>\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n                <input\r\n                name=\"email\" \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                required value={email} \r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n                />\r\n                <input \r\n                name=\"password\"\r\n                type=\"password\" \r\n                placeholder=\"Password\" \r\n                required value={password} \r\n                onChange={onChange}\r\n                className=\"authInput\"\r\n                />\r\n                <input type=\"submit\" \r\n                className=\"authInput authSubmit\"\r\n                value={newAccount ? \"Create Account\" : \"Log In\"}\r\n                />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount?\"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport firebaseInstance from \"firebase\";\r\nimport { authService } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\n\r\nconst Auth= ()=>{\r\n    \r\n    const onSocialClick = async (event) => {\r\n        const {target:{name}}=event;\r\n        let provider;\r\n        if(name===\"google\"){\r\n            provider= new firebaseInstance.auth.GoogleAuthProvider();\r\n        } else if(name===\"github\"){\r\n            provider= new firebaseInstance.auth.GithubAuthProvider();\r\n        }\r\n        await authService.signInWithPopup(provider);\r\n    };\r\n\r\n    return(\r\n        \r\n        <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n            <AuthForm />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet=({nweetObj, isOwner})=>{\r\n    \r\n    const[editing, setEditing]=useState(false);\r\n    const[newNweet, setNewNweet]=useState(nweetObj.text);\r\n    const onDeletClick= async()=>{\r\n        const ok=window.confirm(\"Are you sure you want to delete this nweet?\");\r\n        if(ok){\r\n           await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n           await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    };\r\n    const toggleEditing=()=> setEditing((prev)=>!prev);\r\n    const onSubmit=async(event)=>{\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    };\r\n    const onChange=(event)=>{\r\n        const {target:{value},\r\n    }=event;\r\n    setNewNweet(value);\r\n    };\r\n    return(\r\n    <div className=\"nweet\">\r\n        {editing ? (\r\n            <>\r\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"Edit your nweet\"\r\n                value={newNweet} \r\n                required\r\n                autoFocus\r\n                onChange={onChange}\r\n                className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n                </form>\r\n                <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel</span>\r\n                </>\r\n                ):(\r\n            <>\r\n            <h4>{nweetObj.text}</h4>\r\n            {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl}/>}\r\n            {isOwner&&(\r\n            <div class=\"nweet__actions\">\r\n                <span onClick={onDeletClick}>\r\n                    <FontAwesomeIcon icon={faTrash}/>\r\n                </span>\r\n                <span onClick={toggleEditing}>\r\n                    <FontAwesomeIcon icon={faPencilAlt}/>\r\n                </span>\r\n            </div>\r\n            )}\r\n            </>\r\n        )}\r\n        </div>\r\n    \r\n        \r\n    );\r\n            };\r\nexport default Nweet;","import React,{useState} from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {dbService, storageService} from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory=({userObj})=>{\r\n    \r\n    const [nweet, setNweet]=useState(\"\");\r\n    const [attachment, setAttachment]=useState(\"\"); \r\n    const onSubmit= async(event)=>{\r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let attachmentUrl=\"\";\r\n        if(attachment!==\"\"){\r\n          const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n        const response=await attachmentRef.putString(attachment,\"data_url\");\r\n        attachmentUrl= await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj={\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId:userObj.uid,\r\n            attachmentUrl,\r\n        };  \r\n        \r\n        \r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n        \r\n\r\n    const onChange=(event)=>{\r\n        const { \r\n            target:{value},\r\n            }=event;\r\n            setNweet(value);\r\n    };\r\n    const onFileChange=(event)=>{\r\n        const {\r\n            target:{files},\r\n    }=event;\r\n\r\n    const theFile=files[0];\r\n    const reader= new FileReader();\r\n    reader.onloadend=(finishedEvent)=>{\r\n        const{\r\n            currentTarget: {result},\r\n        }=finishedEvent;\r\n        setAttachment(result);\r\n        };\r\n    \r\n    reader.readAsDataURL(theFile);\r\n\r\n    };\r\n\r\n    const onClearAttachment=()=> setAttachment(\"\");\r\n\r\nreturn(\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n       <input \r\n            id=\"attach-file\"\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            onChange={onFileChange}\r\n            style={{\r\n              opacity: 0,\r\n            }}\r\n        />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                     <img\r\n                        src={attachment}\r\n                        style={{\r\n                        backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                    <span>Remove</span>\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\nexport default NweetFactory;\r\n","import React,{useEffect, useState} from \"react\";\r\nimport {dbService} from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home=({userObj}) =>{\r\n    \r\n\r\n    const [nweets, setNweets]=useState([]); \r\n    \r\n    useEffect(()=>{\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot)=>{\r\n            const nweetArray=snapshot.docs.map((doc)=>({\r\n                id: doc.id,\r\n                ...doc.data(),\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n    },[]);\r\n\r\n  return(\r\n    <div>\r\n       <NweetFactory userObj={userObj}/>\r\n       <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div> \r\n    </div>\r\n\r\n  );\r\n};\r\nexport default Home;\r\n    ","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faTwitter} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faUser} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Navigation=({userObj})=>(\r\n<nav>\r\n    <ul style={{display: \"flex\", justifyContent: \"center\", marginTop:50}}>\r\n        <li>\r\n            <Link to=\"/\" style={{marginRight:10}}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\"/>\r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link \r\n            to=\"/profile\"\r\n            style={{\r\n                marginLeft: 10,\r\n                display:\"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                fontSize: 12,\r\n            }}\r\n            >\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\"/>\r\n            <span style={{marginTop: 10}}>    \r\n                {userObj.displayName\r\n                ? `${userObj.displayName}의 Profile`\r\n                : \"Profile\"}\r\n            \r\n                    </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n);\r\nexport default Navigation;","import React, { useState } from \"react\";\r\nimport { authService } from \"../fbase\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport default({refreshUser,userObj})=>{\r\n    const history=useHistory();\r\n    const [newDisplayName, setNewDisplayName]=useState(userObj.displayName);\r\n    const onLogOutClick=()=> {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n        refreshUser();\r\n\r\n    };\r\n\r\n    const onChange=(event)=>{\r\n        const{\r\n            target:{value},\r\n        }=event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit=async(event)=>{\r\n        event.preventDefault();\r\n        if(userObj.displayName!==newDisplayName){\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n\r\n    return(\r\n       <div className=\"container\">\r\n           <form onSubmit={onSubmit} className=\"profileForm\">\r\n      \r\n            <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Display name\"\r\n            value={newDisplayName}\r\n            className=\"formInput\"\r\n            />\r\n            <input \r\n            type=\"submit\" \r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n                marginTop: 10,\r\n            }}\r\n            />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n            Log Out\r\n        </span>\r\n        </div>\r\n    );\r\n\r\n    };\r\n\r\n   \r\n\r\n","import React from \"react\";\r\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\"\r\nimport Home from \"../routes/Home\"\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter=({refreshUser,isLoggedIn, userObj})=> {\r\n    \r\n    return (\r\n    <Router>\r\n        {isLoggedIn && <Navigation userObj={userObj}/>}\r\n        <Switch>\r\n            {isLoggedIn?(\r\n            <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n                <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n                <Profile userObj={userObj} refreshUser={refreshUser}/>\r\n            </Route>\r\n            \r\n            <Redirect from=\"*\" to=\"/\" />\r\n           </div>\r\n            ):(\r\n            <>\r\n            <Route exact path=\"/\">\r\n                <Auth />\r\n            </Route>\r\n            <Redirect from=\"*\" to=\"/\" />\r\n            </>\r\n            )}\r\n               \r\n        </Switch>\r\n    </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from \"react\"\nimport AppRouter from \"components/Router\";\nimport {authService} from 'fbase';\n\n\nfunction App() {\n  const [init, setInit]=useState(false);\n  const [userObj, setUserObj]=useState(null);\n  useEffect(()=>{\n    authService.onAuthStateChanged((user)=>{\n      if (user){\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args)=> user.updateProfile(args),       \n        });\n        \n      } \n      else{\n        setUserObj(null);\n      }\n      \n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser=()=>{\n    const user=authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args)=> user.updateProfile(args),\n    });\n  };\n  return (\n    <>\n    {init?(<AppRouter\n      refreshUse={refreshUser} \n      isLoggedIn={Boolean(userObj)} \n      userObj={userObj}\n      />\n      ):(\n        \"Initializing...\"\n        )}\n    \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}